@using System.Data.Entity.Infrastructure.Design
@model PetShop.Models.Hamster
@{
    ViewBag.Title = "Edit";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm(actionName: "Edit", controllerName: "Hamsters", method:FormMethod.Post,htmlAttributes:new { enctype = "multipart/form-data"}))

        {
    @Html.HttpMethodOverride(HttpVerbs.Put)
    <!--camp ascuns pentru a retine id-ul obiectului-->
    @Html.HiddenFor(b => b.Id)

    <br />
    @Html.Label("Breed name", "Breed name: ")
    <br />
    @Html.EditorFor(b => b.Breed.Name, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.Breed.Name, "", new { @class = "text-danger" })
    <br />

    <br />
    @Html.Label("Breed Size", "Breed size: ")
    <br />
    @Html.DropDownListFor(b => b.Breed.Size, new SelectList(Model.BreedSizeList, "Value", "Text"), "", new { @class = "form-control" })
    @Html.ValidationMessageFor(b => b.Breed.Size, "", new { @class = "text-danger" })

    <br />
    @Html.Label("Breed Color", "Breed color: ")
    <br />
    @Html.DropDownListFor(b => b.Breed.Color, new SelectList(Model.BreedColorList, "Value", "Text"), " ", new { @class = "form-control" })
    @Html.ValidationMessageFor(b => b.Breed.Color, "", new { @class = "text-danger" })
    <br />

    for (int i = 0; i < Model.FoodList.Count(); i++)
    {
         @Html.HiddenFor(b => b.FoodList[i].Id)
         @Html.HiddenFor(b => b.FoodList[i].Name)
         @Html.CheckBoxFor(b => b.FoodList[i].Checked)
         @Html.DisplayFor(b => b.FoodList[i].Name)
         <br />
      }
     <br />

    <input type="file" id="image1" name="image1" />
    <br />
    <button class="btn btn-primary" type="submit">Update</button>
}

